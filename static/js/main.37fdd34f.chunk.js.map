{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","redux/profileReducer.js","redux/dialogsReducer.js","redux/sidebarReducer.js","redux/reduxStore.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","App.js","index.js"],"names":["module","exports","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","likesCount","newPostText","profileReducer","state","action","type","newPost","push","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogs","name","messages","newMessageBody","dialogsReducer","body","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","store","createStore","Header","className","style","header","src","alt","Navbar","classes","nav","navList","item","active","to","activeClassName","Post","props","styles","MyPosts","postsElements","map","post","newPostElement","React","createRef","postsBlock","cols","rows","onChange","text","current","value","updateNewPostText","ref","onClick","addPost","MyPostsContainer","connect","dispatch","updateNewPostTextActionCreator","ProfileInfo","descrBlock","Profile","News","Music","Settings","DialogItem","dialogsItem","Message","Dialogs","newDialogElement","dialogsElements","dialog","messagesElements","newMessagesBody","dialogsList","event","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","sendMessageClick","App","exact","path","render","component","rerenderDOMTree","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.37fdd34f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Mqh4\",\"navList\":\"Navbar_navList__b9EJx\",\"item\":\"Navbar_item__31tb0\",\"active\":\"Navbar_active__2wnu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__123GF\",\"dialogsList\":\"Dialogs_dialogsList__xybY2\",\"dialogsItem\":\"Dialogs_dialogsItem__23vdU\",\"active\":\"Dialogs_active__3h4kD\",\"messages\":\"Dialogs_messages__M1Dn2\",\"message\":\"Dialogs_message__14HRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__3jREX\",\"postsBlock\":\"MyPosts_postsBlock__2eyOg\",\"posts\":\"MyPosts_posts__nN6EF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3EOLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2XBNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descrBlock\":\"ProfileInfo_descrBlock__1A0b7\",\"item\":\"ProfileInfo_item__eEo3M\"};","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi, how are you\", likesCount: 12 },\r\n    { id: 2, message: \"It's my first postu\", likesCount: 15 },\r\n    { id: 3, message: \"Haha\", likesCount: 0 },\r\n  ],\r\n  newPostText: 'samurai',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 5,\r\n        message: state.newPostText,\r\n        likesCount: 0\r\n      };\r\n      state.posts.push(newPost);\r\n      state.newPostText = ''; \r\n      return state;   \r\n  case UPDATE_NEW_POST_TEXT:\r\n    state.newPostText = action.newText; \r\n    return state;\r\n    default: \r\n    return state;   \r\n  } \r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const updateNewPostTextActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text });\r\n\r\nexport default profileReducer","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE'; \r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Сергей\", },\r\n    { id: 2, name: \"Женя\", },\r\n    { id: 3, name: \"Никитос\" },\r\n    { id: 4, name: \"Юля\" },\r\n    { id: 5, name: \"Петя\" },\r\n    { id: 6, name: \"Дима\" },\r\n    { id: 7, name: \"Жора\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hi\", },\r\n    { id: 2, message: \"Hello\", },\r\n    { id: 3, message: \"Нaha\" },\r\n    { id: 4, message: \"Let`s go\" },\r\n    { id: 5, message: \"Go forward\" },\r\n  ],\r\n  newMessageBody: '', \r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_NEW_MESSAGE_BODY: \r\n      state.newMessageBody = action.body;  \r\n    return state;  \r\n    case SEND_MESSAGE:\r\n      let body = state.newMessageBody;\r\n      state.newMessageBody = '';\r\n      state.messages.push({id: 6, message: body});  \r\n      return state;\r\n    default: \r\n    return state;  \r\n  }  \r\n}\r\n\r\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\r\nexport const updateNewMessageBodyCreator = (body) => ({ type: UPDATE_NEW_MESSAGE_BODY, body: body });\r\n\r\nexport default dialogsReducer","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n}\r\n \r\nexport default sidebarReducer","import { combineReducers, createStore } from \"redux\";\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer'\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n})\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport style from './Header.module.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n  <header className={style.header}>\r\n    <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQI5vFX9tv64JjrobsjPi_62hz5WBWU0FXjfA&usqp=CAU' alt=\"logo\" />\r\n  </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <ul className={classes.navList}>\r\n        <li className={`${classes.item} ${classes.active}`}><NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink></li>\r\n        <li className={classes.item}><NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink></li>\r\n        <li className={classes.item}><NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink></li>\r\n        <li className={classes.item}><NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink></li>\r\n        <li className={classes.item}><NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink></li>\r\n        <li className={classes.item}>\r\n          <NavLink to=\"/friends\" activeClassName={classes.active}>Friends\r\n        \r\n          </NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ8czzbrLzXJ9R_uhKyMiwj1iGxKhJtH7pwlQ&usqp=CAU\" alt=\"\" />\r\n      <div className={styles.item}>{props.message}</div>\r\n      <span className={styles.item}>likes {props.likesCount}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","// презентационная компонента\r\nimport React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profileReducer';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\n\r\nconst MyPosts = (props) => {  \r\n  let postsElements = props.posts\r\n    .map(post => <Post message={post.message} likesCount={post.likesCount} />);\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let addPost = () => {        \r\n    props.addPost();    \r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <div>\r\n          <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" onChange={onPostChange} ref={newPostElement} value={props.newPostText}></textarea>\r\n        </div>\r\n        <div>\r\n          <button onClick={ addPost }>Add post</button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts;","// контейнерная компонента для презентационной\r\nimport React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n// const MyPostsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState();\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator());\r\n//         };\r\n//         let onPostChange = (text) => {\r\n//           const action = updateNewPostTextActionCreator(text);\r\n//           store.dispatch(action);\r\n//         };\r\n\r\n//         return (\r\n//           <MyPosts\r\n//             updateNewPostText={onPostChange}\r\n//             addPost={addPost}\r\n//             posts={state.profilePage.posts}\r\n//             newPostText={state.profilePage.newPostText}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {    \r\n      const action = updateNewPostTextActionCreator(text);\r\n      dispatch(action); \r\n    },\r\n     addPost: () => {     \r\n        dispatch(addPostActionCreator());    \r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n  return (\r\n    <div >\r\n      <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTit-JnxMDv2GGAkG9_6lPM1695xErnnRg0Ng&usqp=CAU' alt='img'/>\r\n      <div className={styles.descrBlock}>ava + descr</div>\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = () => {\r\n\r\n  return (\r\n    <div >\r\n      <ProfileInfo />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport styles from './News.module.css'\r\n\r\nconst News = (props) => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport styles from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport styles from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={styles.dialogsItem + ' ' + styles.active}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={styles.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let newDialogElement = React.createRef();\r\n  let onSendMessageClick = () => {\r\n    props.sendMessage()\r\n  };\r\n\r\n  let onNewMessageChange = (event) => {\r\n    let body = event.target.value;\r\n    props.updateNewMessageBody(body)\r\n  }\r\n\r\n  let dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem name={dialog.name} id={dialog.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((message) => (\r\n    <Message message={message.message} />\r\n  ));\r\n  let newMessagesBody = state.newMessageBody;\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsList}>{dialogsElements}</div>\r\n      <div className={styles.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <div>\r\n            <textarea value={newMessagesBody}\r\n            onChange={onNewMessageChange}\r\n              placeholder=\"Enter your message\"\r\n              ref={newDialogElement}\r\n            ></textarea>\r\n          </div>\r\n          <div>\r\n            <button onClick={onSendMessageClick}>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewMessageBodyCreator: () =>{\r\n      dispatch(sendMessageCreator());\r\n    },\r\n    sendMessageClick: (body) => {\r\n      dispatch(updateNewMessageBodyCreator(body));\r\n    }\r\n  }\r\n}\r\n\r\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport News from './components/News/News'\nimport Music from './components/Music/Music'\nimport Settings from './components/Settings/Settings';\nimport { Route } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\n\nconst App = (props) => {\n  return (   \n      <div className='app-wrapper'>\n        <Header />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route exact path='/dialogs'\n            render={() => <DialogsContainer  />} />\n          <Route path='/profile'\n            render={() => <Profile  />} />\n          <Route path='/news' render={() => <News />} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} />\n        </div>\n      </div>    \n  );\n}\n\nexport default App;\n","import store from './redux/reduxStore';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nlet rerenderDOMTree = (state) => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <React.StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById('root')\n  );\n}\n\nrerenderDOMTree(store.getState());\n\nstore.subscribe(() => {\n  let state = store.getState();\n  rerenderDOMTree(state);\n});\n\n"],"sourceRoot":""}